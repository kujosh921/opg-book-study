17장 ROS2 도구와 CLI 명령어
 17.1 ROS 도구
  - 로봇 개발에 필요한 다양한 개발 도구를 제공하기에 ROS를 사용하는 이유라 봐도 무방하다.
 17.1.1 CLI 기반 (Command_Line Tools)
  - 명령어 기반의 툴로 로봇 액세스 및 거의 모든 ROS 기능을 다룬다.
  - 개바로하녕 및 빌드, 테스트 툴(colcon)
  - 데이터를 기록, 재생, 관리하는 툴(ros2bag)
  - 그 외 20여 가지
 17.1.2 GUI 기반 Rqt
  - 그래픽 인터페이스 개발을 위한 RQt 기반 프레임워크 제공
  - 노드와 그들 사이의 연결 정보 표시(rqt_graph)
  - 속도, 전압 등 시간이 지남에 따라 변화하는 데이터를 플로팅(rqt_plot)
  - 그 외 30여 가지
 17.1.3 RViz
  - 3차원 시각화툴
  - 레이저, 카메라 등의 센서 데이터를 시각화
  - 로봇 외형과 계획된 동작을 표현
 17.1.4 Gazebo
  - 3차원 시뮬레이터
  - 물리 엔진을 탑재, 로봇, 센서, 환경 모델 등을 지원
  - 타 시뮬레이터 대비 ROS와의 높은 호환성
 17.2 ROS 2 CLI 명령어
  - ROS 2 CLI는 터미널 창에 입력하여 사용하는 명령어를 말한다.
 17.3 ROS 2 CLI 사용법
  - $ ros2 [vervs] [sub-verbs] [options] [arguments]
  - tab키를 눌러 자동완성
 17.4 ROS 2 CLI 종류와 각 sub-verbs의 기능
 17.4.1 ROS 2 실행 명령어
  - $ ros2 run [package] [executable]
  - $ ros2 launch [package] [launch-file]
 17.4.2&3 ROS 2 정보 명령어 & 기능 보조 명령어
 17.5 지속 개발되고 있는 ROS2 CLI
  - 해를 거듭할수록 툴의 안정성이 높아지고 있으며 커뮤니티의 의견을 수용하여 그 종류가 다양해지고 있다.

18장 ROS2 GUI 개발을 위한 RQt
 18.1 ROS의 종합 GUI 툴 RQt
  - RQt는 플러그인 형태로 다양한 도구와 인터페이스를 구현할 수 있는 그래픽 사용자 인터페이스 프레임워크이며 다양한 목적의 GUI 툴을 모아둔 ROS의 종합 GUI 툴박스이다.
 18.2 RQt 프레임워크
  - ROS와 연동되는 GUI 툴을 RQt플러그인 형태로 개발할 수 있어 개발된 각 플러그인은 RQt에서 통합하여 사용할 수 있다.
 18.4 RQt 플러그인의 종류 (생략)
 18.5 RQt 사용 예시
 18.5.1 Node Graph
  - 현재 개발환경에서 실행한 노드들의 관계를 그래프 형태로 표시하는 RQt 플러그인이다.
  - 메뉴: Plugins -> Introspection -> Node Graph
 18.5.2 Topic Monitor
  - 현재 개발환경에서 실행한 노드가 사용하는 토픽의 목록을 확인할 수 있고, 사용자가 선택한 토픽의 토픽 이름, 타입, 대역폭, 퍼블리시 주기 값과 같은 토픽 정보를 확인할 수 있는 RQt 플러그인이다.
  - 메뉴: Plugins ->> Topics -> Topic Monitor
 18.5.3 Messsage Publisher
  - 특정 토픽 이름으로 특정 타입의 토픽을 퍼블리시하는 토픽 퍼블리셔 역할을 하는 RQt 플러그인이다.
  - 메뉴: Plugins -> Topics -> Messsage Publisher
 18.5.4 Messsage Type Browser
  - 특정 토픽의 타입을 확인하는 RQt 플러그인이다.
  - 메뉴: Plugins -> Topics -> Messsage Type Browser
 18.5.5 Service Caller
  - 현재 개발환경에서 실행 중인 서비스 서버에 서비스를 요청하는 RQt 플러그인이다.
  - 메뉴: Plugins -> Service -> Service Caller
 18.5.6 Parameter Reconfigure
  - 노드들에서 제공하는 파라미터 값을 확인하고 변경할 수 있는 RQt 플러그인이다.
  - 메뉴: Plugins -> Configuration -> Dynamic Reconfigure
 18.5.7 Plot
  - 2차원 데이터 플롯 긴으을 갖춘 RQt 플러그인으로 2차원 데이터를 도식화 한다.
  - 메뉴: Plugins -> Visualization -> Plot
 18.5.8 Image View
  - 카메라의 영상 데이터를 확인할 수 있는 RQt 플러그인이다.
  - Plugins -> Visualization -> Image View
  - $ ros2 run image_tools cam2image
 18.5.9 Console
  - 노드들에서 발생되는 정보, 경고, 에러 등의 rosout 데이터를 확인할 수 있는 RQt 플러그인이다.
  - 메뉴: Plugins -> Logging -> Console

19장 ROS 2의 표준 단위
 19.1 ROS 2의 표준 단위의 필요성
  - linear.x, linear.y, linear.z: m/s
  - angular.x, angular.y, angular.z: rad/s
  - 단위 변환 프로그램을 추가로 넣을 수 있으나 불필요한 계산이 발생한다.
 19.2 ROS 2의 표준 단위
  - SI 단위 사용
 19.3 ROS 2의 표준 단위 사용

20장 ROS 2의 좌표 표현
 20.1 ROS 2의 좌표 표현 통일의 필요성
  - 서로 다른 좌표 표현 방식을 사용할 경우 발생하는 좌표계 불일치를 사전에 막기 위한 규칙
 20.2 좌표 표현의 기본 규칙
  - 오른손 법칙에 따라 표현한다.
 20.3 좌표 표현의 축 방향 규칙
  1 기본 3축 
   - x forward, y left, z up을 사용
   - Red는 x축, Green은 y축, Blue는 z축
  2 ENU 좌표
   - 지리적 위치의 단거리 데카르트 표현의 경우 ENU 규칙을 사용한다.
   - 비교적 큰 맵을 다루는 드론, 실외 자율주행 로봇에서 사용하는 좌표
  3 접미사 프레임 사용
   - 기본 3축, ENU 좌표를 벗어나는 경우 사용
   - _optical 접미사, _ned 접미사
 20.4 좌표 표현의 회전 표현 규칙
  1 쿼터니언(Quaternion)
   - 간결한 표현방식으로 가장 널리 사용 (x, y, z, w)
   - 특이점 없음
  2 회전 매트릭스(Rotation matrix)
   - 특이점 없음
  3 고정축 roll, pitch, yaw
   - 각 속도에 사용
  4 오일러 각도 yaw, pitch, roll
   - 전역 좌표계에서 회전이 발생하기 때문에 한 축의 회전이 다른 축의 회전과 겹치는 문제(일명 짐벌락)로 인해 사용을 권장하지 않는다.